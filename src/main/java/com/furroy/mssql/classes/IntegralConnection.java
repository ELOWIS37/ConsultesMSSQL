package com.furroy.mssql.classes;/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import com.furroy.mssql.classes.engine.DatabaseConnection;
import com.furroy.mssql.classes.operations.ConsultesSQL;
import com.furroy.mssql.classes.operations.Incidencies;

import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import javax.swing.*;
import java.sql.*;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author ELOWIS
 */
public class IntegralConnection extends JFrame {
    /**
     * Creates new form com.furroy.mssql.classes.IntegralConnection
     */
    public IntegralConnection() {
        initComponents();
    }

    // ResultSet rs = null;

    static String rutaProjecte = System.getProperty("user.dir");
    static String sep = File.separator;
    static String rutaConf = new File(rutaProjecte) + sep + "config" + sep;
    static String rutaArxiuIncidencies = rutaConf + "incidenciesSimples.txt";
    static String rutaArxiuIncidenciesMulti = rutaConf + "incidenciesMulti.txt";

    static String rutaStatusGreen = rutaProjecte + sep + "src" + sep + "main" + sep + "java" + sep + "com" + sep + "furroy" + sep + "mssql" + sep + "imatges" + sep + "statusGreen.png";

    static String rutaStatusRed = rutaProjecte + sep + "src" + sep + "main" + sep + "java" + sep + "com" + sep + "furroy" + sep + "mssql" + sep + "imatges" + sep + "statusRed.png";


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new JLabel();
        bConnection = new JButton();
        jLabel2 = new JLabel();
        jButton1 = new JButton();
        jButton2 = new JButton();
        jButton3 = new JButton();
        jLabel3 = new JLabel();
        multiconsultaCheckbox = new JCheckBox();
        checkBoxArxiusSeparats = new JCheckBox();
        imatgeStatus = new JLabel();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Microsoft SQL Connection");

        bConnection.setText("Connect");
        bConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConnectionActionPerformed(evt);
            }
        });

        jLabel2.setText("Consulta SQL");

        jButton1.setText("Generar CSV");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Disconnect");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton2ActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        jButton3.setText("Obrir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setText("Accedir a l'arxiu");

        multiconsultaCheckbox.setText("Multiconsulta");
        multiconsultaCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiconsultaCheckboxActionPerformed(evt);
            }
        });

        checkBoxArxiusSeparats.setText("Genera arxius separats");

        imatgeStatus.setText("Status");

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        imatgeStatus.setIcon(new ImageIcon(rutaStatusRed));
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                        .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(bConnection)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButton2)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(imatgeStatus))
                        .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addComponent(jButton3)
                                .addComponent(jButton1))
                            .addGap(43, 43, 43)
                            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addComponent(checkBoxArxiusSeparats)
                                .addComponent(multiconsultaCheckbox)))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel1)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(bConnection)
                    .addComponent(jButton2)
                    .addComponent(imatgeStatus))
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(multiconsultaCheckbox))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(checkBoxArxiusSeparats))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static ResultSet generarResultSet (String consulta) throws SQLException{

        Statement statement = (Statement) DatabaseConnection.conn.createStatement();
        ResultSet rs = ((Statement) statement).executeQuery(consulta);

        return rs;
    }

    private void bConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConnectionActionPerformed
        Connection conn = DatabaseConnection.getConnection();

        if (conn != null) {
            System.out.println("Connectat a " + DatabaseConnection.ip);
            System.out.println("Usuari: " + DatabaseConnection.user);
            JOptionPane.showMessageDialog(null, "Connectat a " + DatabaseConnection.ip + "\nUsuari: " + DatabaseConnection.user, "Info", JOptionPane.INFORMATION_MESSAGE);
            imatgeStatus.setIcon(new ImageIcon(rutaStatusGreen));
        } else {
            System.out.println("Error al establir la connexió.");
        }

            // Consultes a la base de dades
            // String consultarArticulos = "SELECT cod_articulo, marca FROM articulos WHERE cod_articulo LIKE 'Z%';";
            // System.out.println("Consulta = " + consultarArticulos);
            // rs = com.furroy.mssql.classes.IntegralConnection.generarResultSet(consultarArticulos);
/*
            // Mostrar les dades en consola
            System.out.println("\ncod_articulo");
            int rsRows = 0;
            while (rs.next()) {
                String cod_articulo = rs.getString("cod_articulo");
                String marca = rs.getString("marca");
                // Imprimir les dades per consola
                System.out.println(cod_articulo + " - " +  marca);
                rsRows++;
            }

            // Mostrar total columnes
            int rsColumns=rs.getMetaData().getColumnCount();
            System.out.println("\nColumnes: "+rsColumns);

            // Mostrar total dades
            System.out.println("Files: " + rsRows);
 */
    }//GEN-LAST:event_bConnectionActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_jButton2ActionPerformed
        try {
                // Cerrar la conexión
                DatabaseConnection.conn.close();
                System.out.println("Desconnectat de " + DatabaseConnection.ip);
                imatgeStatus.setIcon(new ImageIcon(rutaStatusRed));
            JOptionPane.showMessageDialog(null, "Desconnectat de " + DatabaseConnection.databaseName, "Info", JOptionPane.INFORMATION_MESSAGE);
            // Inicialitzar la connexió
                DatabaseConnection.conn = null;
        } catch (Exception e) {
            System.out.println("No estàs connectat a cap servidor SQL: " + e.getMessage());
            JOptionPane.showMessageDialog(null, "No estàs connectat a cap servidor SQL", "Advertència", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            if (multiconsultaCheckbox.isSelected()) {
                try {
                    ConsultesSQL.realizarMulticonsulta();
                } catch (SQLException ex) {
                    Logger.getLogger(IntegralConnection.class.getName()).log(Level.SEVERE, null, ex);
                    Incidencies.escriureMultiIncidencia(rutaArxiuIncidenciesMulti, Collections.singletonList(ex.getMessage()));
                    JOptionPane.showMessageDialog(null, "Error de sentència d'SQL. \nRevisa l'arxiu 'incidenciesMulti.txt'", "Error SQL", JOptionPane.ERROR_MESSAGE);
                }

            } else {
                ConsultesSQL.realizarConsultaSimple();
            }
        } catch (SQLException ex) {
            Logger.getLogger(IntegralConnection.class.getName()).log(Level.SEVERE, null, ex);
            Incidencies.escriureIncidencia(rutaArxiuIncidencies, ex.getMessage());
            JOptionPane.showMessageDialog(null, "Error de sentència d'SQL. \nRevisa l'arxiu 'incidenciesSimples.txt'", "Error SQL", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
                // Obtener el objeto File de la carpeta
                File carpeta = new File(rutaConf);

                // Verificar si la carpeta existe y es un directorio
                if (carpeta.exists() && carpeta.isDirectory()) {
                    // Abrir la carpeta con el explorador de archivos predeterminado del sistema
                    Desktop.getDesktop().open(carpeta);
                } else {
                    System.out.println("La carpeta especificada no existeix");
                }
            } catch (IOException ex) {
                System.out.println("Error al obrir la carpeta: " + ex.getMessage());
            }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void multiconsultaCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiconsultaCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_multiconsultaCheckboxActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton bConnection;
    public static JCheckBox checkBoxArxiusSeparats;
    private JLabel imatgeStatus;
    private JButton jButton1;
    private JButton jButton2;
    private JButton jButton3;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JCheckBox multiconsultaCheckbox;
    // End of variables declaration//GEN-END:variables
}
